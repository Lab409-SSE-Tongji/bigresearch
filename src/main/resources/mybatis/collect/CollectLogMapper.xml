<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.monetware.mapper.collect.CollectLogMapper">
  <resultMap id="BaseResultMap" type="com.monetware.model.collect.CollectLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, level, content, create_time, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from collect_log_1
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from collect_log_1
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.monetware.model.collect.CollectLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into collect_log_1 (id, level, content, 
      create_time, remark)
    values (#{id,jdbcType=BIGINT}, #{level,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.monetware.model.collect.CollectLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into collect_log_${projectId}
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.monetware.model.collect.CollectLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update collect_log_1
    <set>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.monetware.model.collect.CollectLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update collect_log_1
    set level = #{level,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>






  <update id="createCollectLogTable"  parameterType="java.util.Map" >
      DROP TABLE IF EXISTS collect_log_${projectId};
      CREATE TABLE collect_log_${projectId} (
        `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '日志id',
        `level` varchar(255) DEFAULT NULL COMMENT '日志等级',
        `content` varchar(255) DEFAULT NULL COMMENT '日志内容',
        `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '日志创建时间',
        `remark` varchar(255) DEFAULT NULL COMMENT '备注',
        PRIMARY KEY (`id`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
  </update>

  <update id="dropCollectLogTable"  parameterType="java.util.Map" >
      DROP TABLE IF EXISTS collect_log_${projectId};

  </update>









  <insert id="insertCollectLog"  parameterType="java.util.Map" >
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into collect_log_${projectId} ( `level`, `content`, `create_time`)
    values ( #{level,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},now())
  </insert>










  <select id="getCollectLogs" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from collect_log_${projectId}

    <if test="level != null and level!=''">
      where level = #{level,jdbcType=VARCHAR}
    </if>
    ORDER BY id DESC
    LIMIT ${pageStart},${pageSize};

  </select>

  <select id="getCollectLogNo" parameterType="java.lang.Long" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    count(id)
    from collect_log_${projectId}
    <if test="level != null and level!=''">
      where level = #{level,jdbcType=VARCHAR}
    </if>

  </select>




  <select id="getStartTime" parameterType="java.lang.Long" resultType="java.sql.Timestamp">

     SELECT  MIN(create_time) FROM collect_log_${projectId} where content="store the data to the database successfully";

  </select>

  <select id="getTimeNo" parameterType="java.lang.Long" resultType="java.lang.Long">

     SELECT count(id) FROM collect_log_${projectId}
    <![CDATA[
        where UNIX_TIMESTAMP(create_time)*1000 >= #{startTime} and UNIX_TIMESTAMP(create_time)*1000 < #{endTime}

    ]]>
      and content="store the data to the database successfully";
  </select>





</mapper>