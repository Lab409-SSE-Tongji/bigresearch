package com.monetware.mapper.analysis;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import com.monetware.model.analysis.AnalysisProjectClusteInfo;
@Repository
public interface AnalysisProjectClusteInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table analysis_project_cluste_0
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table analysis_project_cluste_0
     *
     * @mbg.generated
     */
    long insert(@Param("projectId")long projectId, @Param("clusterId")long clusterId, @Param("textInfoId")long textInfoId);
	
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table analysis_project_cluste_0
     *
     * @mbg.generated
     */
    int insertSelective(AnalysisProjectClusteInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table analysis_project_cluste_0
     *
     * @mbg.generated
     */
    AnalysisProjectClusteInfo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table analysis_project_cluste_0
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(AnalysisProjectClusteInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table analysis_project_cluste_0
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(AnalysisProjectClusteInfo record);
    
    
    
    void createAnalysisProjectClusteInfoTable(@Param("analysisProjectId")long analysisProjectId);
   
    
    void dropAnalysisProjectClusteInfoTable(@Param("analysisProjectId")long analysisProjectId);

	List<AnalysisProjectClusteInfo> getClusteInfo(Map<String, Long> queryMap);

	long getClusteInfoNo(@Param("projectId")long projectId, @Param("clusteId")long clusteId);
    
    
}